version: 0.2

phases:
  install:
    commands:
      - echo "Installing Terraform and kubectl..."
      - wget https://releases.hashicorp.com/terraform/1.7.5/terraform_1.7.5_linux_amd64.zip
      - unzip terraform_1.7.5_linux_amd64.zip
      - mv terraform /usr/local/bin/
      - terraform version
      - echo Install kubectl
      - curl -o kubectl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable-1.29.txt)/bin/linux/amd64/kubectl"
      #- curl -o kubectl https://amazon-eks.s3.us-west-3.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mv ./kubectl /usr/local/bin
     
  pre_build:
    commands:
      - echo "Initializing Terraform..."
      - cd iac/
      - terraform init
      - echo "Validate Terraform deployment..."
      - terraform validate
      - echo "Planning Terraform deployment..."
      - terraform plan
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region eu-west-3 | docker login --username AWS --password-stdin 885801475464.dkr.ecr.eu-west-3.amazonaws.com/ecr-poei-web1-frontend
      - cd ..
      
  build:
    commands:
      - echo "Applying Terraform configuration..."
      - cd iac/
      - terraform apply -auto-approve
      - echo "Terraform apply complete."
      - cd ..
      - echo "Building and pushing Docker images..."
      - cd docker/wordpress
      - docker build -t wordpress-container .
      - docker tag wordpress-container:latest 885801475464.dkr.ecr.eu-west-3.amazonaws.com/ecr-poei-web1-frontend:latest
      - docker push 885801475464.dkr.ecr.eu-west-3.amazonaws.com/ecr-poei-web1-frontend:latest
      - cd ..
  post_build:
    commands:
      - echo "Configuring kubectl for EKS cluster..."
      - cd k8s/
      - aws eks update-kubeconfig --name cluster-poei --region eu-west-3 
      - echo "Deploying Kubernetes manifests..."
      - kubectl create namespace prod || true
      - echo "Namespace prod created succeful"
      - helm repo add jetstack https://charts.jetstack.io
      - helm repo update
      - helm install cert-manager jetstack/cert-manager --namespace prod --create-namespace --version v1.3.1 --set installCRDs=true
      - echo "Install CSI Driver pour EBS for our cluster"
      - helm repo add aws-ebs-csi-driver https://kubernetes-sigs.github.io/aws-ebs-csi-driver
      - helm repo update
      - helm install aws-ebs-csi-driver aws-ebs-csi-driver/aws-ebs-csi-driver --namespace prod --set enableVolumeScheduling=true --set enableVolumeResizing=true --set enableVolumeSnapshot=true
      - echo "v√©rification that the pods of CSI Driver are in execution"
      - kubectl get pods -n prod -l app=aws-ebs-csi-driver
      - kubectl apply -f prod/mariadb -n prod
      - kubectl apply -f prod/wordpress -n prod
      - kubectl apply -f prod/cert-manager -n prod
      - kubectl apply -f prod/ingress.yaml -n prod
      - echo "Deployment to Kubernetes completed."
      - kubectl get pods -n prod
      - kubectl get pvc -n prod

      
      